I"P<h1 id="what-is-it">What is it?</h1>
<p>finding-PORTy is a proof of concept fully functional port scanning tool designed to check open ports, check live host in a network, stealth scans, and keep activity data for later use. I wrote it on Python 3 so the codebase is supposed to be easily understandable and modified for further use.</p>

<p>hereâ€™s what the menu looks like</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    |<span class="se">\ </span>   o
    |  <span class="se">\ </span>   o
|<span class="se">\ </span>/    .<span class="se">\ </span>o
| |       <span class="o">(</span> <span class="o">======[</span>finding-PORTy v1.]<span class="o">======</span>
|/ <span class="se">\ </span>    /
    |  /
     |/
                    


<span class="o">===[</span>OPTIONS]<span class="o">===</span> 
 <span class="o">[</span>1] Scan Open Ports 
 <span class="o">[</span>2] Ping Sweep Live Host <span class="o">(</span>Loud<span class="o">)</span> 
 <span class="o">[</span>3] TCP Scan <span class="o">(</span>Stealth<span class="o">)</span> 
 <span class="o">[</span>4] Show Activities 
 <span class="o">[</span>5] Remove History
 <span class="o">[</span>0] Exit
Action: 
</code></pre></div></div>

<h1 id="she-bang">She bang!</h1>
<p>the basic gist of this is to define and let the OS know that itâ€™s a python script and points to the correct interterpreter directly in your code so instead of doing <code class="highlighter-rouge">$ python scan.py</code> in order to run your code, you can simply make it executable by <code class="highlighter-rouge">sudo chmod 775 scan.py</code> and run it like this <code class="highlighter-rouge">./scan.py</code></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="mi">1</span> <span class="c1">#!/usr/bin/env python3
</span></code></pre></div></div>

<h1 id="importing-modules">Importing modules</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="mi">3</span> <span class="c1">#import curses #for console interface...soon
</span>  <span class="mi">4</span> <span class="kn">from</span> <span class="nn">socket</span> <span class="kn">import</span> <span class="o">*</span>
  <span class="mi">5</span> <span class="kn">import</span> <span class="nn">time</span>
  <span class="mi">6</span> <span class="kn">import</span> <span class="nn">os</span>
  <span class="mi">7</span> <span class="kn">import</span> <span class="nn">multiprocessing</span>
  <span class="mi">8</span> <span class="kn">import</span> <span class="nn">subprocess</span>
  <span class="mi">9</span> <span class="kn">import</span> <span class="nn">csv</span>

    <span class="mi">1</span> <span class="c1">#!/usr/bin/env python3
</span>
</code></pre></div></div>

<h1 id="conclusion">Conclusion</h1>
<p>Learning curve is a minor setback, you are living in 21st Century different information, tutorials, documentations and overall human knowledge is available on the internet, anything can be learned. React.js is a pretty good front-end framework, in order to complete a full stack project you have to use a different framework and runtime to finish the back-end you can use Node.js and Express.js web framework for your REST API, even better if you add GraphQL on the mix. This industry is changing month by month and itâ€™s up to you to catch up and learn.</p>

<p><a href="https://github.com/AdrianDucao/devlog">Sample Code</a>
<a href="https://www.youtube.com/c/AMACTechtipsPhilippines/videos?view_as=subscriber">Dev Vlog</a></p>

<p>Happy Coding.</p>
:ET